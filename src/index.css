@font-face {
  font-family: 'SF Pro Display';
  src: url('./fonts/Semibold.otf') format('opentype');
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: 'SF Pro Display';
  src: url('./fonts/Regular.otf') format('opentype');
  font-weight: 400;
  font-style: normal;
}

:root {
  --background: #000000;
  --surface: #1d1d1f;
  --surface-secondary: #2d2d30;
  --text-primary: #f5f5f7;
  --text-secondary: #a1a1a6;
  --accent: #007aff;
  --accent-hover: #0056cc;
  --border: rgba(255, 255, 255, 0.1);
  --shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  --shadow-large: 0 8px 40px rgba(0, 0, 0, 0.4);
  --blur: blur(20px);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
  background: var(--background);
  font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  background: var(--background);
  color: var(--text-primary);
  overflow-x: hidden;
  line-height: 1.6;
}

::selection {
  background: var(--accent);
  color: white;
}

/* Apple-style glass morphism */
.glass {
  background: rgba(29, 29, 31, 0.72);
  backdrop-filter: var(--blur);
  -webkit-backdrop-filter: var(--blur);
  border: 1px solid var(--border);
  border-radius: 16px;
}

.glass-nav {
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: var(--blur);
  -webkit-backdrop-filter: var(--blur);
  border-bottom: 1px solid var(--border);
}

/* Smooth animations with hardware acceleration */
.smooth-transform {
  transform: translateZ(0);
  will-change: transform;
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Apple-style button */
.apple-button {
  background: var(--accent);
  color: white;
  border: none;
  border-radius: 980px;
  padding: 12px 24px;
  font-weight: 500;
  font-size: 16px;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  transform: translateZ(0);
}

.apple-button:hover {
  background: var(--accent-hover);
  transform: translateY(-1px) translateZ(0);
  box-shadow: var(--shadow);
}

.apple-button:active {
  transform: translateY(0) translateZ(0);
}

/* Floating animation */
@keyframes float {
  0%, 100% { 
    transform: translateY(0px) translateZ(0);
  }
  50% { 
    transform: translateY(-10px) translateZ(0);
  }
}

.floating {
  animation: float 6s ease-in-out infinite;
}

/* Parallax scrolling */
.parallax {
  transform: translateZ(0);
  will-change: transform;
}

/* Smooth reveal animation */
@keyframes reveal {
  from {
    opacity: 0;
    transform: translateY(30px) translateZ(0);
  }
  to {
    opacity: 1;
    transform: translateY(0) translateZ(0);
  }
}

.reveal {
  animation: reveal 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

/* Text gradient */
.text-gradient {
  background: linear-gradient(135deg, #007aff 0%, #5856d6 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Card hover effect */
.card-hover {
  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  transform: translateZ(0);
}

.card-hover:hover {
  transform: translateY(-8px) translateZ(0);
  box-shadow: var(--shadow-large);
}

/* Scrollbar styling */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: var(--text-secondary);
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--text-primary);
}

/* Hide cursor for custom cursor */
body, button, a, p, h1, h2, h3, h4, h5, h6, span {
  cursor: none !important;
}

/* Performance optimizations */
.gpu-accelerated {
  transform: translateZ(0);
  will-change: transform;
  backface-visibility: hidden;
}

/* Smooth text rendering */
.smooth-text {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

/* Apple-style focus states */
.focus-ring:focus {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}